/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.assi2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JATHURSHAN
 */
public class Table2JFrame extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement p = null;
    ResultSet rs = null;
    String sql;
    /**
     * Creates new form Table2JFrame
     */
    public Table2JFrame() {
        initComponents();
        showTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTable2 = new javax.swing.JLabel();
        Table1Btn = new javax.swing.JButton();
        jLabelDnumber = new javax.swing.JLabel();
        jLabelDlocation = new javax.swing.JLabel();
        jTextFieldDnumber = new javax.swing.JTextField();
        jTextFieldDlocation = new javax.swing.JTextField();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonDlocationSearch = new javax.swing.JButton();
        jButtonDnumberSearch = new javax.swing.JButton();
        jLabelUpdateWith = new javax.swing.JLabel();
        jTextFieldNewDnumber = new javax.swing.JTextField();
        jTextFieldNewDlocation = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTable2.setText("Table 2");

        Table1Btn.setText("Table 1");
        Table1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table1BtnActionPerformed(evt);
            }
        });

        jLabelDnumber.setText("Dnumber");

        jLabelDlocation.setText("Dlocation");

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dnumber", "Dlocation"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jButtonDlocationSearch.setText("Search by Dlocation");
        jButtonDlocationSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDlocationSearchActionPerformed(evt);
            }
        });

        jButtonDnumberSearch.setText("Search by Dnumber");
        jButtonDnumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDnumberSearchActionPerformed(evt);
            }
        });

        jLabelUpdateWith.setText("(use above fields for updation only)");

        jLabel1.setText("New Dnumber");

        jLabel2.setText("New Dlocation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelDlocation, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jLabelDnumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTable2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldDlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNewDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNewDlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 23, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabelUpdateWith, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Table1Btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDnumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonDlocationSearch)
                                .addGap(54, 54, 54)
                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTable2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table1Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNewDnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNewDlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUpdateWith, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDlocationSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDnumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Table1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table1BtnActionPerformed
        // TODO add your handling code here:
        Table1JFrame jf = new Table1JFrame();
        jf.show();  // display Table1 JFrame
        
        dispose();  // close current JFrame
    }//GEN-LAST:event_Table1BtnActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        // TODO add your handling code here:
        // Get the data from text fiels
        String Dnumber = jTextFieldDnumber.getText();
        String Dlocation = jTextFieldDlocation.getText();
        
        //check whether the text fields are empty or not
        if(Dnumber.equals("") || Dlocation.equals("")){
            JOptionPane.showMessageDialog(null, "Fields cannot be null","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            //Database connection
            con = DBconnection();
            //clear data on table
            jTable2.setModel(new DefaultTableModel(null, new String[]{"Dnumber","Dlocation"}));
            
            try{
                //SQL command
                sql = "INSERT INTO DEPT_LOCATIONS (Dnumber,Dlocation) VALUES ("
                        + Integer.parseInt(Dnumber) + ",'" + Dlocation + "')";
                p = con.prepareStatement(sql);
                
                int insertedRows = p.executeUpdate();
                if(insertedRows > 0){ 
                    JOptionPane.showMessageDialog(null, "Insertion successfull","success",JOptionPane.INFORMATION_MESSAGE);
                    showTableData();  // show table data
                    //clearing the text fields after inserting
                    jTextFieldDnumber.setText("");
                    jTextFieldDlocation.setText("");
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e,"Error",JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_jButtonInsertActionPerformed
    }
    
    
    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        
        String Dnumber = jTextFieldDnumber.getText();
        String Dlocation = jTextFieldDlocation.getText();
        String NewDnumber = jTextFieldNewDnumber.getText();
        String NewDlocation = jTextFieldNewDlocation.getText();
        
        if(Dlocation.equals("") || Dnumber.equals("") || NewDlocation.equals("") || NewDnumber.equals("")){
            JOptionPane.showMessageDialog(null, "All four fields are required for updation","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            con = DBconnection();
            //clear data on table
            jTable2.setModel(new DefaultTableModel(null, new String[]{"Dnumber","Dlocation"}));
            
            try{
                //SQL command
                sql = "UPDATE DEPT_LOCATIONS SET Dnumber = ? , Dlocation = ? WHERE Dnumber = ? AND Dlocation = ?";
                p = con.prepareStatement(sql);
                
                p.setInt(1, Integer.parseInt(NewDnumber));
                p.setString(2,NewDlocation);
                p.setInt(3, Integer.parseInt(Dnumber));
                p.setString(4,Dlocation);
                
                int UpdatedRows = p.executeUpdate();
                if(UpdatedRows > 0){ 
                    JOptionPane.showMessageDialog(null, "Update successfull","success",JOptionPane.INFORMATION_MESSAGE);
                    showTableData();  // show table data
                    //clearing the text fields after updating
                    jTextFieldDnumber.setText("");
                    jTextFieldDlocation.setText("");
                    jTextFieldNewDnumber.setText("");
                    jTextFieldNewDlocation.setText("");
                    
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String Dnumber = jTextFieldDnumber.getText();
        String Dlocation = jTextFieldDlocation.getText();
        
        if(Dnumber.equals("") || Dlocation.equals("")){
            JOptionPane.showMessageDialog(null, "Dlocation, Dnumber required","Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            con = DBconnection();
            //clear data on table
            jTable2.setModel(new DefaultTableModel(null, new String[]{"Dnumber","Dlocation"}));
            
            try{
                //SQL command
                sql = "DELETE FROM DEPT_LOCATIONS WHERE Dnumber = ? AND Dlocation = ?";
                p = con.prepareStatement(sql);
                
                p.setInt(1, Integer.parseInt(Dnumber));
                p.setString(2,Dlocation);
                
                int deletedRows = p.executeUpdate();
                if(deletedRows > 0){ 
                    JOptionPane.showMessageDialog(null, "Deletion successfull","success",JOptionPane.INFORMATION_MESSAGE);
                    showTableData();  // show table data
                    //clearing the text fields after inserting
                    jTextFieldDnumber.setText("");
                    jTextFieldDlocation.setText("");
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e,"Error",JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonDlocationSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDlocationSearchActionPerformed
        // TODO add your handling code here:
        String Dlocation = jTextFieldDlocation.getText();
        //check whether the text field is empty or not
        if(Dlocation.equals("")){
            JOptionPane.showMessageDialog(null, "Dlocation required to search the data",
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            con = DBconnection();
            
            try{
                //SQL command
                sql = "SELECT *FROM DEPT_LOCATIONS WHERE Dlocation = ?";
                p = con.prepareStatement(sql);
                p.setString(1,Dlocation);
                rs = p.executeQuery();
                
                String Dnumber = "";  // To check a mismatching Dnumber
                while(rs.next()){
                    // get data from the result object
                    Dnumber = rs.getString("Dnumber");
                    
                    // then set the data to appropriate text fields
                    jTextFieldDnumber.setText(Dnumber);
                }
                
                // if no matching data found - clear textfields and show error msg
                if("".equals(Dnumber)){
                    jTextFieldDnumber.setText("");
                    
                    JOptionPane.showMessageDialog(null, "No data found","Error",
                            JOptionPane.ERROR_MESSAGE);
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e,"Error",
                        JOptionPane.ERROR_MESSAGE);
            }
           
        }
    }//GEN-LAST:event_jButtonDlocationSearchActionPerformed

    private void jButtonDnumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDnumberSearchActionPerformed
        // TODO add your handling code here:
        
        String Dnumber = jTextFieldDnumber.getText();
        //check whether the text field is empty or not
        if(Dnumber.equals("")){
            JOptionPane.showMessageDialog(null, "Dnumber required to search the data",
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            con = DBconnection();
            
            try{
                //SQL command
                sql = "SELECT *FROM DEPT_LOCATIONS WHERE Dnumber = ?";
                p = con.prepareStatement(sql);
                p.setString(1,Dnumber);
                rs = p.executeQuery();
                
                String Dlocation = "";  // To check a mismatching Dnumber
                while(rs.next()){
                    // get data from the result object
                    Dlocation = rs.getString("Dlocation");
                    
                    // then set the data to appropriate text fields
                    jTextFieldDlocation.setText(Dlocation);
                }
                
                // if no matching data found - clear textfields and show error msg
                if("".equals(Dlocation)){
                    jTextFieldDlocation.setText("");
                    
                    JOptionPane.showMessageDialog(null, "No data found","Error",
                            JOptionPane.ERROR_MESSAGE);
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e,"Error",
                        JOptionPane.ERROR_MESSAGE);
            }
           
        }
        
    }//GEN-LAST:event_jButtonDnumberSearchActionPerformed
    
    
    // For Database connection - using JDBC driver (included in the dependencies)
    private Connection DBconnection(){
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/ABCD","root", "");
            
            if(con != null){
                System.out.println("Connected to DB successfully");
                return con;
            }
            else{
                System.out.println("Not Connected to DB");
                return null;
            }
           
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e, "SQL connection error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }
    
    public void showTableData(){
        
        con = DBconnection();
        try{
            // SQL command
            sql = "SELECT *FROM DEPT_LOCATIONS";
            p = con.prepareStatement(sql);
            rs = p.executeQuery();
           
            while(rs.next()){
                String Dnumber = String.valueOf(rs.getInt("Dnumber"));
                String Dlocation = rs.getString("Dlocation");
                
                String data[] = {Dnumber,Dlocation};
                DefaultTableModel tableModel = (DefaultTableModel)jTable2.getModel();
                tableModel.addRow(data);
            }
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Table2JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Table1Btn;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDlocationSearch;
    private javax.swing.JButton jButtonDnumberSearch;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelDlocation;
    private javax.swing.JLabel jLabelDnumber;
    private javax.swing.JLabel jLabelTable2;
    private javax.swing.JLabel jLabelUpdateWith;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldDlocation;
    private javax.swing.JTextField jTextFieldDnumber;
    private javax.swing.JTextField jTextFieldNewDlocation;
    private javax.swing.JTextField jTextFieldNewDnumber;
    // End of variables declaration//GEN-END:variables
}
